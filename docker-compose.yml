services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: hmlv_api
    working_dir: /app
    command: ["uvicorn", "api.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]
    env_file:
      - .env
    volumes:
      - ./:/app
    depends_on:
      redis:
        condition: service_started
      postgres:
        condition: service_started
      minio:
        condition: service_started
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 3
    ports:
      - "8000:8000"
    networks:
      - hmlv_net
  worker:
    image: python:3.11-slim
    container_name: hmlv_worker
    working_dir: /app
    command: ["bash", "-lc", "sleep infinity"]
    env_file:
      - .env
    volumes:
      - ./:/app
    depends_on:
      redis:
        condition: service_started
    healthcheck:
      test: ["CMD", "python", "-c", "print('ok')"]
      interval: 10s
      timeout: 3s
      retries: 3
    networks:
      - hmlv_net
  redis:
    image: redis:7.2-alpine
    container_name: hmlv_redis
    # Expose redis on the host for local MCP helpers to connect (maps container 6379 -> host 6379)
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3
    networks:
      - hmlv_net
  postgres:
    image: postgres:15-alpine
    container_name: hmlv_postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=hmlv
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - hmlv_net
  minio:
    image: minio/minio:latest
    container_name: hmlv_minio
    command: server /data --console-address ":9001"
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9000/minio/health/live || exit 0"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - hmlv_net

networks:
  hmlv_net:
    driver: bridge

volumes:
  pgdata:
  minio_data: